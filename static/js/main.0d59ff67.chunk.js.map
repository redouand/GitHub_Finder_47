{"version":3,"sources":["components/layouts/spinner/spinner.gif","components/layouts/Navbar.js","context/gitHub/githubContext.js","components/layouts/Alert.js","components/users/search.js","components/users/UserItem.js","components/layouts/spinner/spinner.js","components/users/Users.js","components/pages/home.js","components/pages/NOT_FOUND.js","components/pages/about.js","context/gitHub/GithubState.js","components/users/userPage.js","context/gitHub/githubReducer.js","App.js","index.js"],"names":["module","exports","Navbar","className","to","GithubContext","createContext","Alert","alertAtt","style","marginRight","Search","alertFoo","contextValue","useContext","useState","text","setText","emptyInput","setEmptyInput","users","length","totalCount","onSubmit","e","preventDefault","setTimeout","gitSearchFoo","type","value","onChange","target","placeholder","onClick","clearFoo","UserItem","user","login","avatar_url","html_url","src","alt","width","spinnerStyled","marginLeft","Spinner","spinner","userStyle","display","gridTemplateColumns","gridGap","Users","loading","map","key","id","Home","NotFound","About","githubClientId","githubClientSecret","UserPage","match","userInfo","getUserPageFoo","blog","name","company","bio","followers","following","hireable","location","public_repos","public_gists","useEffect","params","username","href","GithubReducer","state","action","payload","process","CLIENT_ID","CLIENT_SECRET","GithubState","props","useReducer","alert","dispatch","Provider","theText","axios","get","then","res","data","items","total_count","children","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d59ff67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ac447129.gif\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () =>{\r\n        return (\r\n            <nav className='navbar bg-primary'>\r\n                <h1>\r\n                    <Link to='/'>\r\n                        <i className='fab fa-github' />\r\n                        GitHub Finder\r\n                    </Link>\r\n                    \r\n                </h1>\r\n                <ul>\r\n                    <li><Link to='/'>Home</Link></li>\r\n                    <li><Link to='/about'>About</Link></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n}\r\n\r\nexport default Navbar\r\n","import {createContext} from 'react'\r\n\r\nconst GithubContext = createContext(null);\r\n\r\nexport default GithubContext","import React from 'react';\r\nfunction Alert({alertAtt}) {\r\n    return (\r\n        <div className='alert alert-light'>\r\n            <i className='fas fa-info-circle' style={{marginRight: '10px'}}></i>\r\n            Please Enter Something\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport GithubContext from '../../context/gitHub/githubContext';\r\nimport Alert from '../layouts/Alert'\r\n\r\nconst Search = ({alertFoo}) =>{\r\n    \r\n    //----------init context\r\n    const contextValue = useContext(GithubContext);\r\n    //-----------Use State\r\n    const [text, setText] = useState('');\r\n    const [emptyInput, setEmptyInput] = useState(false);\r\n\r\n    //-----------Functions\r\n    const onSubmitFoo = (e)=>{\r\n        e.preventDefault()\r\n        if (text === '') {\r\n            setEmptyInput(true)\r\n            setTimeout(() => {\r\n                setEmptyInput(false)\r\n            }, 5000);\r\n            // alertFoo('You Have To Enter Something..', 'light')\r\n        } else {\r\n            contextValue.gitSearchFoo(text)\r\n            setText('')         \r\n        }\r\n\r\n    }\r\n    const saveValue = (e)=>{\r\n        setText(e.target.value)\r\n    }\r\n\r\n\r\n    //-----------The JSX\r\n        return (\r\n            <Fragment>\r\n                {\r\n                   emptyInput &&\r\n                    <Alert />  \r\n                }\r\n                {\r\n                    contextValue.users.length > 0 ? \r\n                    <h2>{contextValue.totalCount[0]}{contextValue.totalCount[1]}</h2> :\r\n                    <h2>Welcome to GitHub Finder</h2>\r\n                }\r\n               \r\n                <form className='form' onSubmit={onSubmitFoo}>\r\n                    <input type='text'\r\n                    value={text}\r\n                    onChange={saveValue}\r\n                    placeholder='Search For Users....'\r\n                    />\r\n                    <input type='submit' className='btn btn-dark btn-block'/>\r\n                </form>\r\n                \r\n                {\r\n                    contextValue.users.length > 0 && \r\n                    <button className='btn btn-success btn-block'\r\n                     onClick={contextValue.clearFoo}>Clear</button>\r\n                }\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserItem = ({user: {login, avatar_url, html_url}}) => {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"card text-center\">\r\n                    < img \r\n                        src= {avatar_url}\r\n                        className = \"round-img\"\r\n                        alt=\"the user profile\"\r\n                        style={{width: '60px'}}\r\n                    />\r\n                     <h3>{login}</h3>\r\n                    <Link to={`/users/${login}`} className='btn btn-dark btn-sm my-1'>More</Link>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n}\r\n\r\nexport default UserItem\r\n","import React, {Fragment} from 'react';\r\nimport spinner from './spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <img style={spinnerStyled} src={spinner} alt='loading...'/>\r\n        </Fragment>\r\n    )\r\n}\r\nconst spinnerStyled = {\r\n    width: '400px',\r\n    marginLeft: '28.5vw'\r\n}\r\nexport default Spinner\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layouts/spinner/spinner';\r\nimport GithubContext from '../../context/gitHub/githubContext';\r\n\r\nconst Users = () =>{\r\n    const contextValue = useContext(GithubContext)\r\n    if (contextValue.loading) {\r\n        return <Spinner />\r\n    }\r\n     else {\r\n        return (\r\n            <div style={userStyle}>\r\n                {contextValue.users.map(user => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)', \r\n    gridGap: '1rem'\r\n}\r\n\r\nexport default Users\r\n  ","import React from 'react';\r\nimport Search from '../users/search'\r\nimport Users from '../users/Users'\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n          <Search />\r\n          <Users />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n            <p>the page you were looking for does not exist...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>You are In the about Section!</h1>\r\n            <p>this is github finder</p>\r\n            <p>version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","//---------------PACKAGES\r\nimport React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\n//---------------Files\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\n\r\n\r\n//-------environment variables\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif(process.env.NODE_ENV !== 'production'){\r\n    githubClientId = process.env.REACT_APP_CLIENT_ID;\r\n    githubClientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n}\r\nelse{\r\n    githubClientId = process.env.CLIENT_ID;\r\n    githubClientSecret = process.env.CLIENT_SECRET;\r\n}\r\nconst GithubState = (props) =>{\r\n    const initialState = {\r\n        loading: false,\r\n        users:[],\r\n        userInfo: {},\r\n        totalCount: [null, 'Welcome To GitHub Finder'],\r\n        alert: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n    \r\n    //-------------Multi-Search Function---------------------------------------------------------------------------------\r\n\r\n    const gitSearchFoo = (theText)=>{\r\n        dispatch({type: 'SET_LOADING'})\r\n        axios.get(`https://api.github.com/search/users?q=${theText}\r\n        &client_id=${githubClientId}\r\n        &client_secret=${githubClientSecret}`)\r\n        .then(res =>{\r\n          dispatch({type: 'SET_USERS', payload: [res.data.items, [res.data.total_count, 'Result Found']]})\r\n        } )\r\n      }\r\n\r\n    //-----------Singel Search Function (page Search)-----------------------------------------------------------------------------------------\r\n\r\n\r\n    const getUserPageFoo = (username) =>{\r\n    dispatch({type: 'SET_LOADING'})\r\n    axios.get(`https://api.github.com/users/${username}?\r\n    client_id=${githubClientId}\r\n    &client_secret=${githubClientSecret}`)\r\n    .then(res =>{\r\n        dispatch({type: 'SET_USER_INFO', payload: res.data})\r\n    } )\r\n    }\r\n\r\n    //------------------Clear Button Function----------------------------------------------------------------------------------\r\n\r\n\r\n    const clearFoo = () =>{\r\n    dispatch({type: 'CLEAR_USERS', payload: []})\r\n    }\r\n    \r\n //----------------------JSX------------------------------------------------------------------------------\r\n    return(\r\n        <GithubContext.Provider value={{\r\n            loading: state.loading,\r\n            users: state.users,\r\n            userInfo: state.userInfo,\r\n            totalCount: state.totalCount,\r\n            alert: state.alert,\r\n            gitSearchFoo,\r\n            getUserPageFoo,\r\n            clearFoo\r\n        }} >\r\n            {props.children}\r\n        </GithubContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GithubState\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layouts/spinner/spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport GithubContext from '../../context/gitHub/githubContext'\r\n\r\nconst UserPage = ({match}) => {\r\n    // -------------init Context\r\n    const contextValue = useContext(GithubContext)    \r\n    //---------------DeStructuring\r\n        const {userInfo, getUserPageFoo, loading} = contextValue\r\n         const {\r\n                login,\r\n                avatar_url,\r\n                blog,\r\n                name,\r\n                company,\r\n                html_url,\r\n                bio,\r\n                followers,\r\n                following,\r\n                hireable,\r\n                location,\r\n                public_repos,\r\n                public_gists\r\n            } = userInfo\r\n\r\n    //--------------Use Effect\r\n    useEffect(()=>{\r\n        getUserPageFoo(match.params.username)\r\n                //eslint-disable-next-line\r\n    }, [])\r\n\r\n        //---------------Output JSX\r\n        if (loading) {\r\n           return <Spinner />\r\n        }\r\n        else {\r\n            return(\r\n                <Fragment>\r\n                    <Link to='/' className='btn btn-light' ><i className=\"fas fa-long-arrow-alt-left\"></i>Back To Search</Link>\r\n\r\n                    Hireable: {' '}\r\n                    {hireable ? <i className='fas fa-check text-success' /> : \r\n                    <i className='fas fa-times-circle text-danger' />}\r\n\r\n                    <div className='card grid-2'>\r\n                        <div className='all-center'>\r\n                            <img src={avatar_url} alt=\"\" className=\"round-img\" style={{width:'150px'}} />\r\n                            <h1>{name}</h1>\r\n                            {{location} && <p>Location: {location}</p>}\r\n                        </div>\r\n                        <div>\r\n                            {bio && \r\n                            <Fragment>\r\n                                <h3>Bio</h3>\r\n                                <p>{bio}</p>\r\n                            </Fragment>\r\n                            }\r\n                            <a href={html_url} className='btn btn-dark my-1'>visit Github Profile</a>\r\n                            \r\n                            <ul>\r\n                                <li>\r\n                                    {login && \r\n                                    <Fragment>\r\n                                        <small>UserName: </small> {login}\r\n                                    </Fragment>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li>\r\n                                    {company && \r\n                                    <Fragment>\r\n                                        <small>company: </small> {login}\r\n                                    </Fragment>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li>\r\n                                    {blog && \r\n                                    <Fragment>\r\n                                        <small>Website: </small><small><a href={blog} style={{display: 'inlineBlock'}}> {blog}</a></small>\r\n                                    </Fragment>\r\n                                    }\r\n                                </li> \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card text-center'>\r\n                         <div className='badge badge-primary'>Followers: {followers}</div>\r\n                         <div className='badge badge-success'>Following: {following}</div>\r\n                         <div className='badge badge-danger'>Public Repos: {public_repos}</div>\r\n                         <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n            \r\n        }\r\n}\r\n\r\nexport default UserPage\r\n","const GithubReducer = (state, action) => {\r\n    if(action.type === 'SET_LOADING'){\r\n        return {...state, loading: true}\r\n    }\r\n    if(action.type === 'SET_USERS'){\r\n        return {...state, users: action.payload[0], loading: false, totalCount: action.payload[1]}\r\n    }\r\n    if(action.type === 'SET_USER_INFO'){\r\n        return {...state, userInfo: action.payload, loading: false}\r\n    }\r\n    if (action.type === 'CLEAR_USERS') {\r\n        return {...state, users: action.payload}\r\n    }\r\n}\r\n\r\nexport default GithubReducer","// ------------------PACKAGAES-----------------\nimport React from 'react';\nimport './App.css';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\n// ------------------Files-----------------\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/home';\nimport NotFound from './components/pages/NOT_FOUND';\nimport About from './components/pages/about';\nimport UserPage from './components/users/userPage';\nimport GithubState from './context/gitHub/GithubState';\n\n\n\n//------------------------------------------------------------------------------------\nconst App = () => {\n  return (\n    <GithubState>\n      <BrowserRouter>\n\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/about' component={About} />\n            <Route exact path='/users/:username' render={props => (<UserPage {...props} />)} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n\n      </BrowserRouter>\n    </GithubState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}